name: Deploy to AWS Lambda

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run linter
      run: npm run lint

    - name: Run tests
      run: npm test

  deploy-dev:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Install Serverless Framework
      run: npm install -g serverless

    - name: Deploy to AWS (Development)
      run: |
        serverless deploy --stage dev
      env:
        JWT_SECRET: ${{ secrets.JWT_SECRET_DEV }}
        USER_POOL_ID: ${{ secrets.USER_POOL_ID_DEV }}
        API_BASE_URL: ${{ secrets.API_BASE_URL_DEV }}

  deploy-prod:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
        aws-region: us-east-1

    - name: Install Serverless Framework
      run: npm install -g serverless

    - name: Deploy to AWS (Production)
      run: |
        serverless deploy --stage prod
      env:
        JWT_SECRET: ${{ secrets.JWT_SECRET_PROD }}
        USER_POOL_ID: ${{ secrets.USER_POOL_ID_PROD }}
        API_BASE_URL: ${{ secrets.API_BASE_URL_PROD }}

    - name: Notify deployment success
      if: success()
      run: |
        echo "üöÄ Deployment to production successful!"
        echo "API Gateway URL will be displayed in the deployment logs above"

    - name: Notify deployment failure
      if: failure()
      run: |
        echo "‚ùå Deployment to production failed!"
        exit 1